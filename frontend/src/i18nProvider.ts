//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';
import grOriginal from 'ra-language-greek';

const enResources = {
  resources: {
    Products: {
      name: 'Products',
      fields: {
        productId: 'Product Id',
        sku: 'Sku',
        name: 'Name',
        price: 'Price',
        weight: 'Weight',
        description: 'Description',
        thumbnail: 'Thumbnail',
        image: 'Image',
        category: 'Category',
        createDate: 'Create Date',
        stock: 'Stock',
        id: 'id',
      },
    },
    ProductCategories: {
      name: 'Product Categories',
      fields: { id: 'Id', productId: 'Product Id', categoryId: 'Category Id' },
    },
    Categories: {
      name: 'Categories',
      fields: {
        categoryId: 'Category Id',
        name: 'Name',
        description: 'Description',
        thumbnail: 'Thumbnail',
        id: 'id',
      },
    },
    Customers: {
      name: 'Customers',
      fields: {
        customerId: 'Customer Id',
        email: 'Email',
        password: 'Password',
        name: 'Name',
        billingAddress: 'Billing Address',
        defaultShippingAddress: 'Default Shipping Address',
        country: 'Country',
        phone: 'Phone',
        id: 'id',
      },
    },
    Orders: {
      name: 'Orders',
      fields: {
        orderId: 'Order Id',
        customerId: 'Customer Id',
        amount: 'Amount',
        shippingAddress: 'Shipping Address',
        orderAddress: 'Order Address',
        orderEmail: 'Order Email',
        orderDate: 'Order Date',
        orderStatus: 'Order Status',
        orderFinalId: 'Order Final Id',
        id: 'id',
      },
    },
    OrderDetails: {
      name: 'Order Details',
      fields: {
        id: 'Id',
        orderId: 'Order Id',
        productId: 'Product Id',
        price: 'Price',
        sku: 'Sku',
        quantity: 'Quantity',
      },
    },
  },
};
const frResources = {
  resources: {
    Products: {
      name: 'Products (fr)',
      fields: {
        productId: 'Product Id (fr)',
        sku: 'Sku (fr)',
        name: 'Name (fr)',
        price: 'Price (fr)',
        weight: 'Weight (fr)',
        description: 'Description (fr)',
        thumbnail: 'Thumbnail (fr)',
        image: 'Image (fr)',
        category: 'Category (fr)',
        createDate: 'Create Date (fr)',
        stock: 'Stock (fr)',
        id: 'id',
      },
    },
    ProductCategories: {
      name: 'Product Categories (fr)',
      fields: {
        id: 'Id (fr)',
        productId: 'Product Id (fr)',
        categoryId: 'Category Id (fr)',
      },
    },
    Categories: {
      name: 'Categories (fr)',
      fields: {
        categoryId: 'Category Id (fr)',
        name: 'Name (fr)',
        description: 'Description (fr)',
        thumbnail: 'Thumbnail (fr)',
        id: 'id',
      },
    },
    Customers: {
      name: 'Customers (fr)',
      fields: {
        customerId: 'Customer Id (fr)',
        email: 'Email (fr)',
        password: 'Password (fr)',
        name: 'Name (fr)',
        billingAddress: 'Billing Address (fr)',
        defaultShippingAddress: 'Default Shipping Address (fr)',
        country: 'Country (fr)',
        phone: 'Phone (fr)',
        id: 'id',
      },
    },
    Orders: {
      name: 'Orders (fr)',
      fields: {
        orderId: 'Order Id (fr)',
        customerId: 'Customer Id (fr)',
        amount: 'Amount (fr)',
        shippingAddress: 'Shipping Address (fr)',
        orderAddress: 'Order Address (fr)',
        orderEmail: 'Order Email (fr)',
        orderDate: 'Order Date (fr)',
        orderStatus: 'Order Status (fr)',
        orderFinalId: 'Order Final Id (fr)',
        id: 'id',
      },
    },
    OrderDetails: {
      name: 'Order Details (fr)',
      fields: {
        id: 'Id (fr)',
        orderId: 'Order Id (fr)',
        productId: 'Product Id (fr)',
        price: 'Price (fr)',
        sku: 'Sku (fr)',
        quantity: 'Quantity (fr)',
      },
    },
  },
};
const grResources = {
  resources: {
    Products: {
      name: 'Products (gr)',
      fields: {
        productId: 'Product Id (gr)',
        sku: 'Sku (gr)',
        name: 'Name (gr)',
        price: 'Price (gr)',
        weight: 'Weight (gr)',
        description: 'Description (gr)',
        thumbnail: 'Thumbnail (gr)',
        image: 'Image (gr)',
        category: 'Category (gr)',
        createDate: 'Create Date (gr)',
        stock: 'Stock (gr)',
        id: 'id',
      },
    },
    ProductCategories: {
      name: 'Product Categories (gr)',
      fields: {
        id: 'Id (gr)',
        productId: 'Product Id (gr)',
        categoryId: 'Category Id (gr)',
      },
    },
    Categories: {
      name: 'Categories (gr)',
      fields: {
        categoryId: 'Category Id (gr)',
        name: 'Name (gr)',
        description: 'Description (gr)',
        thumbnail: 'Thumbnail (gr)',
        id: 'id',
      },
    },
    Customers: {
      name: 'Customers (gr)',
      fields: {
        customerId: 'Customer Id (gr)',
        email: 'Email (gr)',
        password: 'Password (gr)',
        name: 'Name (gr)',
        billingAddress: 'Billing Address (gr)',
        defaultShippingAddress: 'Default Shipping Address (gr)',
        country: 'Country (gr)',
        phone: 'Phone (gr)',
        id: 'id',
      },
    },
    Orders: {
      name: 'Orders (gr)',
      fields: {
        orderId: 'Order Id (gr)',
        customerId: 'Customer Id (gr)',
        amount: 'Amount (gr)',
        shippingAddress: 'Shipping Address (gr)',
        orderAddress: 'Order Address (gr)',
        orderEmail: 'Order Email (gr)',
        orderDate: 'Order Date (gr)',
        orderStatus: 'Order Status (gr)',
        orderFinalId: 'Order Final Id (gr)',
        id: 'id',
      },
    },
    OrderDetails: {
      name: 'Order Details (gr)',
      fields: {
        id: 'Id (gr)',
        orderId: 'Order Id (gr)',
        productId: 'Product Id (gr)',
        price: 'Price (gr)',
        sku: 'Sku (gr)',
        quantity: 'Quantity (gr)',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);
const gr = mergeTranslations(grOriginal, grResources);

const translations = { en, fr, gr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Français' },
    { locale: 'gr', name: 'Ελληνικά' },
  ],
);
